#pragma checksum "C:\Users\aaijaz\Desktop\SharedFolder\FileTask\DemoClient\DemoClient\Views\File\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "afed22c03ced7a4e6af9883b737f515ffe07ebfb"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_File_Index), @"mvc.1.0.view", @"/Views/File/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/File/Index.cshtml", typeof(AspNetCore.Views_File_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\aaijaz\Desktop\SharedFolder\FileTask\DemoClient\DemoClient\Views\_ViewImports.cshtml"
using DemoClient;

#line default
#line hidden
#line 2 "C:\Users\aaijaz\Desktop\SharedFolder\FileTask\DemoClient\DemoClient\Views\_ViewImports.cshtml"
using DemoClient.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"afed22c03ced7a4e6af9883b737f515ffe07ebfb", @"/Views/File/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"d1de3b656d46759d43b4cc0e594e1643d4d4e69f", @"/Views/_ViewImports.cshtml")]
    public class Views_File_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 1 "C:\Users\aaijaz\Desktop\SharedFolder\FileTask\DemoClient\DemoClient\Views\File\Index.cshtml"
  
    ViewData["Title"] = "File";

#line default
#line hidden
            BeginContext(40, 1415, true);
            WriteLiteral(@"<div style=""margin-top: 50px;"">
    <div>
        <h2>PDF File</h2>
        <button data-file=""TestFile.pdf"" data-action=""View"" class=""file-button"">View</button>
        <button data-file=""TestFile.pdf"" data-action=""OpenInNewTab"" class=""file-button"">Open in New Tab</button>
        <button data-file=""TestFile.pdf"" data-action=""Download"" class=""file-button"">Download</button>
    </div>
    <div>
        <h2>JPG File</h2>
        <button data-file=""TestJPG.jpg"" data-action=""View"" class=""file-button"">View</button>
        <button data-file=""TestJPG.jpg"" data-action=""OpenInNewTab"" class=""file-button"">Open in New Tab</button>
        <button data-file=""TestJPG.jpg"" data-action=""Download"" class=""file-button"">Download</button>
    </div>
    <div>
        <h2>Doc File</h2>
        <button data-file=""TestDoc.docx"" data-action=""Download"" class=""file-button"">Download</button>
    </div>
    <div>
        <h2>Excel File</h2>
        <button data-file=""TestExcel.xlsx"" data-action=""Download"" class=""file");
            WriteLiteral(@"-button"">Download</button>
    </div>
</div>

<script>
    document.querySelectorAll('.file-button').forEach(button => {
        button.addEventListener('click', function () {
            const fileName = this.getAttribute('data-file');
            const action = this.getAttribute('data-action');
            let url;

            if (action == 'View') {
                url = '");
            EndContext();
            BeginContext(1456, 30, false);
#line 35 "C:\Users\aaijaz\Desktop\SharedFolder\FileTask\DemoClient\DemoClient\Views\File\Index.cshtml"
                  Write(Url.Action("ViewFile", "File"));

#line default
#line hidden
            EndContext();
            BeginContext(1486, 150, true);
            WriteLiteral("\' + `?fileName=${fileName}`;\r\n                window.location.href = url;\r\n            } else if (action == \'OpenInNewTab\') {\r\n                url = \'");
            EndContext();
            BeginContext(1637, 30, false);
#line 38 "C:\Users\aaijaz\Desktop\SharedFolder\FileTask\DemoClient\DemoClient\Views\File\Index.cshtml"
                  Write(Url.Action("ViewFile", "File"));

#line default
#line hidden
            EndContext();
            BeginContext(1667, 145, true);
            WriteLiteral("\' + `?fileName=${fileName}`;\n                window.open(url, \'_blank\');\r\n            } else if (action == \'Download\') {\r\n                url = \'");
            EndContext();
            BeginContext(1813, 34, false);
#line 41 "C:\Users\aaijaz\Desktop\SharedFolder\FileTask\DemoClient\DemoClient\Views\File\Index.cshtml"
                  Write(Url.Action("DownloadFile", "File"));

#line default
#line hidden
            EndContext();
            BeginContext(1847, 123, true);
            WriteLiteral("\' + `?fileName=${fileName}`;\r\n                window.location.href = url;\r\n            }\r\n        });\r\n    });\r\n</script>\r\n");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
